[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dsrfa-backend"
version = "1.2.5"
description = "Davao-South Regional Football Association - Backend API for member management, events, and community engagement"
readme = "backend-README.md"
license = {text = "MIT"}
authors = [
    {name = "DSRFA Development Team", email = "dev@dsrfa.com"},
]
keywords = [
    "football",
    "association",
    "davao",
    "sports",
    "membership",
    "events",
    "fastapi",
    "api",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
requires-python = ">=3.11"
dependencies = [
    "fastapi==0.104.1",
    "uvicorn[standard]==0.24.0",
    "sqlalchemy==2.0.23",
    "pydantic[email]==2.5.0",
    "python-jose[cryptography]==3.3.0",
    "passlib[bcrypt]==1.7.4",
    "python-multipart==0.0.6",
    "bcrypt==4.1.2",
    "PyJWT==2.8.0",
    "python-dotenv==1.0.0",
    "alembic==1.13.1",
    "psycopg2-binary==2.9.9",
    "aiofiles==23.2.1",
    "pillow==10.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-asyncio==0.23.2",
    "httpx==0.25.2",
    "black==23.11.0",
    "isort==5.12.0",
    "flake8==6.1.0",
    "mypy==1.7.1",
    "pre-commit==3.6.0",
]
test = [
    "pytest==7.4.3",
    "pytest-asyncio==0.23.2",
    "pytest-cov==4.1.0",
    "httpx==0.25.2",
    "factory-boy==3.3.0",
]
docs = [
    "mkdocs==1.5.3",
    "mkdocs-material==9.4.8",
    "mkdocstrings[python]==0.24.0",
]

[project.urls]
Homepage = "https://dsrfa.com"
Documentation = "https://api.dsrfa.com/docs"
Repository = "https://github.com/dsrfa/backend.git"
Issues = "https://github.com/dsrfa/backend/issues"

[project.scripts]
dsrfa-server = "run:main"
dsrfa-init-db = "init_db:init_database"

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.23.2",
    "httpx>=0.25.2",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "pre-commit>=3.6.0",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["main", "config"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "bcrypt.*",
    "sqlalchemy.*",
    "alembic.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = "-v --tb=short"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
] 